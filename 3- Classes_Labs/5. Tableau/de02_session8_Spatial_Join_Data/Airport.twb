<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0516.1720                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0516.1720)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Airports and routes' inline='true' name='federated.1pxdxsz1s0wpcf17fo33f0uer69c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airports and routes' name='textscan.0v74wbu0w6mhh314hqvlq11c6nvn'>
            <connection class='textscan' directory='C:/Users/uksal/Downloads/Spatial_Join_Data' filename='Airports and routes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0v74wbu0w6mhh314hqvlq11c6nvn' name='Airports and routes.csv' table='[Airports and routes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Airline' ordinal='0' />
            <column datatype='string' name='Source airport' ordinal='1' />
            <column datatype='string' name='Name Origin Airport' ordinal='2' />
            <column datatype='string' name='City Origin Airport' ordinal='3' />
            <column datatype='string' name='Country Origin Aiport' ordinal='4' />
            <column datatype='real' name='Latitude Origin Airport' ordinal='5' />
            <column datatype='real' name='Longitude Origin Airport' ordinal='6' />
            <column datatype='integer' name='Altitude Origin Airport' ordinal='7' />
            <column datatype='string' name='Destination airport' ordinal='8' />
            <column datatype='string' name='Name Destination Airport' ordinal='9' />
            <column datatype='string' name='City Destination Airport' ordinal='10' />
            <column datatype='string' name='Country Destination Airports' ordinal='11' />
            <column datatype='real' name='Latitude Destination Airport' ordinal='12' />
            <column datatype='real' name='Longitude  Destination Airport' ordinal='13' />
            <column datatype='integer' name='Altitude  Destination Airport' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0v74wbu0w6mhh314hqvlq11c6nvn' name='Airports and routes.csv' table='[Airports and routes#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Airline' ordinal='0' />
            <column datatype='string' name='Source airport' ordinal='1' />
            <column datatype='string' name='Name Origin Airport' ordinal='2' />
            <column datatype='string' name='City Origin Airport' ordinal='3' />
            <column datatype='string' name='Country Origin Aiport' ordinal='4' />
            <column datatype='real' name='Latitude Origin Airport' ordinal='5' />
            <column datatype='real' name='Longitude Origin Airport' ordinal='6' />
            <column datatype='integer' name='Altitude Origin Airport' ordinal='7' />
            <column datatype='string' name='Destination airport' ordinal='8' />
            <column datatype='string' name='Name Destination Airport' ordinal='9' />
            <column datatype='string' name='City Destination Airport' ordinal='10' />
            <column datatype='string' name='Country Destination Airports' ordinal='11' />
            <column datatype='real' name='Latitude Destination Airport' ordinal='12' />
            <column datatype='real' name='Longitude  Destination Airport' ordinal='13' />
            <column datatype='integer' name='Altitude  Destination Airport' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Source airport</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name Origin Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name Origin Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Name Origin Airport</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City Origin Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City Origin Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>City Origin Airport</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Origin Aiport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Origin Aiport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Country Origin Aiport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude Origin Airport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude Origin Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Latitude Origin Airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude Origin Airport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude Origin Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Longitude Origin Airport</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Altitude Origin Airport</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Altitude Origin Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Altitude Origin Airport</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Destination airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Destination airport</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name Destination Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name Destination Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Name Destination Airport</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City Destination Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City Destination Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>City Destination Airport</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Destination Airports</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Destination Airports]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Country Destination Airports</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude Destination Airport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude Destination Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Latitude Destination Airport</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude  Destination Airport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude  Destination Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Longitude  Destination Airport</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Altitude  Destination Airport</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Altitude  Destination Airport]</local-name>
            <parent-name>[Airports and routes.csv]</parent-name>
            <remote-alias>Altitude  Destination Airport</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Makepoint' datatype='spatial' name='[Calculation_1923881516674772997]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([Latitude Origin Airport], [Longitude Origin Airport])' />
      </column>
      <column caption='Calculation1' datatype='spatial' name='[Calculation_1923881516676349958]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([Latitude Destination Airport], [Longitude  Destination Airport])' />
      </column>
      <column caption='Calculation2' datatype='real' name='[Calculation_1923881516676448263]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAKELINE([Point Origin Airport], [Point Destination Airport])' />
      </column>
      <column datatype='string' name='[City Destination Airport]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City Origin Airport]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country Destination Airports]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Origin Aiport]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude Destination Airport]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude Origin Airport]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude  Destination Airport]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude Origin Airport]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Airports and routes.csv' datatype='table' name='[__tableau_internal_object_id__].[Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <filter class='categorical' column='[City Origin Airport]' filter-group='2'>
        <groupfilter function='member' level='[City Origin Airport]' member='&quot;Istanbul&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[Country Destination Airports]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Country Destination Airports]' />
          <groupfilter function='member' level='[Country Destination Airports]' member='&quot;Turkey&quot;' />
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Airports and routes.csv' id='Airports and routes.csv_E11FAFEAB2EC48EFABBC85C296E2D18F'>
            <properties context=''>
              <relation connection='textscan.0v74wbu0w6mhh314hqvlq11c6nvn' name='Airports and routes.csv' table='[Airports and routes#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Airline' ordinal='0' />
                  <column datatype='string' name='Source airport' ordinal='1' />
                  <column datatype='string' name='Name Origin Airport' ordinal='2' />
                  <column datatype='string' name='City Origin Airport' ordinal='3' />
                  <column datatype='string' name='Country Origin Aiport' ordinal='4' />
                  <column datatype='real' name='Latitude Origin Airport' ordinal='5' />
                  <column datatype='real' name='Longitude Origin Airport' ordinal='6' />
                  <column datatype='integer' name='Altitude Origin Airport' ordinal='7' />
                  <column datatype='string' name='Destination airport' ordinal='8' />
                  <column datatype='string' name='Name Destination Airport' ordinal='9' />
                  <column datatype='string' name='City Destination Airport' ordinal='10' />
                  <column datatype='string' name='Country Destination Airports' ordinal='11' />
                  <column datatype='real' name='Latitude Destination Airport' ordinal='12' />
                  <column datatype='real' name='Longitude  Destination Airport' ordinal='13' />
                  <column datatype='integer' name='Altitude  Destination Airport' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='Airports and routes' name='federated.1pxdxsz1s0wpcf17fo33f0uer69c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pxdxsz1s0wpcf17fo33f0uer69c'>
            <column caption='Makepoint' datatype='spatial' name='[Calculation_1923881516674772997]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAKEPOINT([Latitude Origin Airport], [Longitude Origin Airport])' />
            </column>
            <column caption='Calculation1' datatype='spatial' name='[Calculation_1923881516676349958]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAKEPOINT([Latitude Destination Airport], [Longitude  Destination Airport])' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude Destination Airport]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude Origin Airport]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude  Destination Airport]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude Origin Airport]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_1923881516674772997]' derivation='Collect' name='[clct:Calculation_1923881516674772997:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1923881516676349958]' derivation='Collect' name='[clct:Calculation_1923881516676349958:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[Longitude (generated)]' field-type='quantitative' max='33762705.135533325' min='-12514419.060512943' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[Latitude (generated)]' field-type='quantitative' max='13764914.336695295' min='-9983401.7752031907' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='Makepoint' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[clct:Calculation_1923881516674772997:nk]' />
              <geometry column='[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[clct:Calculation_1923881516674772997:nk]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='Makepoint (2)' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[clct:Calculation_1923881516674772997:nk]' />
              <geometry column='[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[clct:Calculation_1923881516674772997:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <_.fcp.Layers.true...pane generated-title='Calculation1' id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[clct:Calculation_1923881516676349958:nk]' />
              <geometry column='[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[clct:Calculation_1923881516676349958:nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[Latitude (generated)]</rows>
        <cols>[federated.1pxdxsz1s0wpcf17fo33f0uer69c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AE5D1500-1CE5-466F-A6CB-55CA4114E7EA}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{42DBBB2B-D179-45A5-B74B-10C9725696C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airports' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
